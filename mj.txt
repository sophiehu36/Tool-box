JavaScript:
对闭包的理解：
指引用了另一个函数作用域中变量的函数，通常是在嵌套函数中实现的。因为闭包会保留他们包含函数的作用域，所以比其他函数更占用内存，所以应该谨慎使用。
还有具体工作中的使用例子

箭头函数与普通函数的区别，使用bind能否改变箭头函数的this指向
很大程度上，箭头函数实例化的函数对象与正式的函数表达式创建的函数对象行为是相通的，任何可以使用函数和表达式的地方都可以使用函数表达式。
箭头函数不能使用arguments、super和new。target，也不能用作构造函数，此外，箭头函数也没有prototype属性。
箭头函数的参数只能通过定义的命名参数访问。可以在包装函数中把它提供给箭头函数。
标准函数中，this的引用事吧函数当成方法调用的上下文对象，全局调用函数时，this指向window，函数作为对象中的方法调用时，this指向这个对象
箭头函数中，this引用的是定义箭头函数的上下文。由于箭头函数没有自己的this，所以当然也就不能用call()、apply()、bind()这些方法去改变this的指向。

如何判断一个对象的属性是它自身的而非原型链继承的：
Object.prototype.hasOwnProperty() 
例子：
const object1 = {};
object1.property1 = 42;
object1.hasOwnProperty(property1)

事件委托是什么：
就是把目标节点的事件绑定到祖先节点上。这种简单而优雅的事件注册方式是基于事件传播过程中，逐层冒泡总能被祖先节点捕获。
这样做的好处：优化代码，提升运行性能，真正把 HTML 和 JavaScript 分离，也能防止出现在动态添加或删除节点过程中注册的事件丢失的现象。
  
vue相关：
v-if和v-show的区别: v-if 是控制元素的添加与删除，而 v-show 只是控制元素的 display 属性
watch和computed区别:
3.1 computed特性
1.是计算值，
2.应用：就是简化tempalte里面{{}}计算和处理props或$emit的传值
3.具有缓存性，页面重新渲染值不变化,计算属性会立即返回之前的计算结果，而不必再次执行函数
3.2 watch特性
1.是观察的动作，
2.应用：监听props，$emit或本组件的值执行异步操作
3.无缓存性，页面重新渲染时值不变化也会执行

平时用到哪些vue的生命周期钩子 beforeCreate created beforeMount mounted beforeUpdate updated (keep-alive: activated deactivated) beforeDestroy destroyed errorCaptured（新增） 

vue数据传递方式 props,$emit,v-bind.sync, provide,inject, vuex
父组件和子组件间通信：
父向子传递数据是通过props，子向父传递数据是通过event($emit)；
通过父链/子链进行数据传递($parent / $children)；
通过 ref 也可以访问组件实例；
依赖注入：provide / inject；
兄弟组件间通信：
event bus
Vuex
跨级组件间通信：
event bus；
Vuex；
依赖注入：provide / inject；

vue-router路由守卫，beforeEach,afterEach,延伸到token过期时未发送的数据如何处理
路由守卫：路由跳转的一些验证

网络请求相关：
http状态码平时接触到哪些？314（可能听错了，查了一下没有314，只有304）的话如何处理

平时网络请求用fetch还是axios。axios和ajax区别
fetch 是 JavaScript 原生库，浏览器都支持，无需安装直接使用；axios 不是原生库，需要安装才能使用；
fetch 只能在浏览器环境中运行；axios 既可以在浏览器、也可以在node.js 环境中运行。
axios基于promise对ajax进行了封装

简历项目相关：
vue-draggable利用了哪些原生事件。drag,dragend,dragenter,dragleave,dragover,dragstart,drop
动态更改主题颜色功能是如何实现的。theme-generator
